{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/tsvetomir/Documents/Test/lt_todos/lt_todos_rn_ts/screens/All.tsx\";\n\nimport React, { memo, useCallback, useContext, useRef } from 'react';\nimport Layout from \"../components/Layout\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Todo } from \"../components/Todo\";\nimport { ThemeContext } from \"../utils/ThemeManager\";\nimport { TextComponent } from \"../components/TextComponent\";\nimport { LanguageContext } from \"../utils/LanguageManager\";\nexport var All = memo(function (props) {\n  var _useContext = useContext(ThemeContext),\n      themeColor = _useContext.themeColor;\n\n  var _useContext2 = useContext(LanguageContext),\n      dictionary = _useContext2.dictionary;\n\n  var _Dimensions$get = Dimensions.get('screen'),\n      width = _Dimensions$get.width,\n      height = _Dimensions$get.height;\n\n  var TODO_SIZE = height * 1.2;\n  var renderItem = useCallback(function (_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    var inputRange = [-1, 0, TODO_SIZE * index, TODO_SIZE * (index + 2)];\n    var scale = scrollY.interpolate({\n      inputRange: inputRange,\n      outputRange: [1, 1, 1, 0]\n    });\n    return React.createElement(Todo, {\n      customStyle: {\n        transform: [{\n          scale: scale\n        }],\n        height: width * 4\n      },\n      status: item.is_urgent,\n      date: item.created_at,\n      title: item.title,\n      description: item.description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }\n    });\n  }, []);\n  var keyExtractor = useCallback(function (item) {\n    return item.title.toString();\n  }, []);\n\n  var renderSeparator = function renderSeparator() {\n    return React.createElement(View, {\n      style: {\n        height: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 3\n      }\n    });\n  };\n\n  var scrollY = useRef(new Animated.Value(0)).current;\n  return React.createElement(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }\n  }, React.createElement(TextComponent, {\n    textSize: \"xl\",\n    customStyle: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, dictionary.title), React.createElement(Animated.FlatList, {\n    onScroll: Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          y: scrollY\n        }\n      }\n    }], {\n      useNativeDriver: true\n    }),\n    contentContainerStyle: {\n      padding: 15\n    },\n    showsVerticalScrollIndicator: false,\n    data: dictionary.todos,\n    renderItem: renderItem,\n    keyExtractor: keyExtractor,\n    scrollEventThrottle: 16,\n    ItemSeparatorComponent: renderSeparator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }\n  }));\n});\nvar styles = StyleSheet.create({\n  title: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlign: 'center',\n    padding: 15\n  },\n  textDark: {\n    color: '#E8EAED'\n  },\n  textWhite: {\n    color: '#121212'\n  }\n});","map":{"version":3,"sources":["/home/tsvetomir/Documents/Test/lt_todos/lt_todos_rn_ts/screens/All.tsx"],"names":["React","memo","useCallback","useContext","useRef","Layout","Todo","ThemeContext","TextComponent","LanguageContext","All","props","themeColor","dictionary","Dimensions","get","width","height","TODO_SIZE","renderItem","item","index","inputRange","scale","scrollY","interpolate","outputRange","transform","is_urgent","created_at","title","description","keyExtractor","toString","renderSeparator","Animated","Value","current","styles","event","nativeEvent","contentOffset","y","useNativeDriver","padding","todos","StyleSheet","create","justifyContent","alignItems","textAlign","textDark","color","textWhite"],"mappings":";;;AAAA,OAAOA,KAAP,IAEGC,IAFH,EAGGC,WAHH,EAIIC,UAJJ,EAKIC,MALJ,QAKkB,OALlB;AAMA,OAAOC,MAAP;;;;;AAQA,SAASC,IAAT;AACA,SAASC,YAAT;AACA,SAASC,aAAT;AACA,SAASC,eAAT;AAIA,OAAO,IAAMC,GAAsB,GAAGT,IAAI,CAAC,UAACU,KAAD,EAAW;AAErD,oBAAuBR,UAAU,CAACI,YAAD,CAAjC;AAAA,MAAQK,UAAR,eAAQA,UAAR;;AACA,qBAAuBT,UAAU,CAACM,eAAD,CAAjC;AAAA,MAAQI,UAAR,gBAAQA,UAAR;;AACA,wBAAuBC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAvB;AAAA,MAAOC,KAAP,mBAAOA,KAAP;AAAA,MAAaC,MAAb,mBAAaA,MAAb;;AAED,MAAMC,SAAS,GAAGD,MAAM,GAAG,GAA3B;AAEC,MAAME,UAAU,GAAGjB,WAAW,CAAC,gBAAkB;AAAA,QAAhBkB,IAAgB,QAAhBA,IAAgB;AAAA,QAAXC,KAAW,QAAXA,KAAW;AACjD,QAAMC,UAAU,GAAG,CAAC,CAAC,CAAF,EAAI,CAAJ,EAAMJ,SAAS,GAAGG,KAAlB,EAAyBH,SAAS,IAAIG,KAAK,GAAC,CAAV,CAAlC,CAAnB;AAEA,QAAME,KAAK,GAAGC,OAAO,CAACC,WAAR,CAAoB;AAChCH,MAAAA,UAAU,EAAVA,UADgC;AAEhCI,MAAAA,WAAW,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP;AAFmB,KAApB,CAAd;AAKC,WAAO,oBAAC,IAAD;AACP,MAAA,WAAW,EAAE;AAACC,QAAAA,SAAS,EAAE,CAAC;AAACJ,UAAAA,KAAK,EAALA;AAAD,SAAD,CAAZ;AAAsBN,QAAAA,MAAM,EAAED,KAAK,GAAC;AAApC,OADN;AAEL,MAAA,MAAM,EAAEI,IAAI,CAACQ,SAFR;AAGL,MAAA,IAAI,EAAER,IAAI,CAACS,UAHN;AAIL,MAAA,KAAK,EAAET,IAAI,CAACU,KAJP;AAKL,MAAA,WAAW,EAAEV,IAAI,CAACW,WALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAOA,GAf6B,EAe5B,EAf4B,CAA9B;AAiBD,MAAMC,YAAY,GAAG9B,WAAW,CAAE,UAAAkB,IAAI;AAAA,WAAIA,IAAI,CAACU,KAAL,CAAWG,QAAX,EAAJ;AAAA,GAAN,EAAkC,EAAlC,CAAhC;;AAEA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,WACtB,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AACLjB,QAAAA,MAAM,EAAC;AADF,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADsB;AAAA,GAAxB;;AAQA,MAAMO,OAAO,GAAGpB,MAAM,CAAC,IAAI+B,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAA9C;AAEC,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAC,IAAxB;AAA6B,IAAA,WAAW,EAAEC,MAAM,CAACR,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyDjB,UAAU,CAACiB,KAApE,CADD,EAEA,oBAAC,QAAD,CAAU,QAAV;AACA,IAAA,QAAQ,EAAEK,QAAQ,CAACI,KAAT,CACR,CAAC;AAACC,MAAAA,WAAW,EAAE;AAACC,QAAAA,aAAa,EAAE;AAACC,UAAAA,CAAC,EAAClB;AAAH;AAAhB;AAAd,KAAD,CADQ,EAET;AAACmB,MAAAA,eAAe,EAAC;AAAjB,KAFS,CADV;AAKE,IAAA,qBAAqB,EAAE;AAACC,MAAAA,OAAO,EAAC;AAAT,KALzB;AAMG,IAAA,4BAA4B,EAAE,KANjC;AAOG,IAAA,IAAI,EAAE/B,UAAU,CAACgC,KAPpB;AAQG,IAAA,UAAU,EAAE1B,UARf;AASG,IAAA,YAAY,EAAEa,YATjB;AAUG,IAAA,mBAAmB,EAAE,EAVxB;AAWG,IAAA,sBAAsB,EAAEE,eAX3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADJ;AAkBA,CAvDyC,CAAnC;AAyDP,IAAMI,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAChCjB,EAAAA,KAAK,EAAE;AACLkB,IAAAA,cAAc,EAAE,QADX;AAELC,IAAAA,UAAU,EAAE,QAFP;AAGLC,IAAAA,SAAS,EAAE,QAHN;AAILN,IAAAA,OAAO,EAAE;AAJJ,GADyB;AAO/BO,EAAAA,QAAQ,EAAE;AACTC,IAAAA,KAAK,EAAE;AADE,GAPqB;AAUhCC,EAAAA,SAAS,EAAE;AACTD,IAAAA,KAAK,EAAE;AADE;AAVqB,CAAlB,CAAf","sourcesContent":["import React, {  \n  FunctionComponent,\n   memo,\n   useCallback,\n    useContext, \n    useRef } from 'react'\nimport Layout from '../components/Layout'\nimport { \n View,\n StyleSheet, \n FlatList,\n Animated,\n Dimensions\n} from 'react-native'\nimport { Todo } from '../components/Todo'\nimport { ThemeContext } from '../utils/ThemeManager'\nimport { TextComponent } from '../components/TextComponent'\nimport { LanguageContext } from '../utils/LanguageManager'\n\n\n\nexport const All: FunctionComponent = memo((props) => {\n\n const { themeColor } = useContext(ThemeContext);\n const { dictionary } = useContext(LanguageContext) \n const {width,height} = Dimensions.get('screen');\n\nconst TODO_SIZE = height * 1.2;\n\n const renderItem = useCallback(({item,index}) => {\n const inputRange = [-1,0,TODO_SIZE * index, TODO_SIZE * (index+2)];\n \n const scale = scrollY.interpolate({\n   inputRange,\n   outputRange: [1,1,1,0],\n })\n\n  return <Todo \n  customStyle={{transform: [{scale}],height: width*4,}}\n    status={item.is_urgent}\n    date={item.created_at}\n    title={item.title}\n    description={item.description}\n  />\n },[])\n\nconst keyExtractor = useCallback((item => item.title.toString()), [])\n \nconst renderSeparator = () => (\n  <View\n    style={{\n      height:15,\n    }}\n  />\n);\n\nconst scrollY = useRef(new Animated.Value(0)).current;\n\n return (\n     <Layout>\n      <TextComponent textSize=\"xl\" customStyle={styles.title}>{dictionary.title}</TextComponent>\n     <Animated.FlatList\n     onScroll={Animated.event(\n       [{nativeEvent: {contentOffset: {y:scrollY}}}],\n      {useNativeDriver:true})\n    }\n       contentContainerStyle={{padding:15}}\n        showsVerticalScrollIndicator={false}\n        data={dictionary.todos}\n        renderItem={renderItem}\n        keyExtractor={keyExtractor}\n        scrollEventThrottle={16}\n        ItemSeparatorComponent={renderSeparator}\n      />\n  </Layout>\n )\n})\n\nconst styles = StyleSheet.create({\n title: {\n   justifyContent: 'center',\n   alignItems: 'center',\n   textAlign: 'center',\n   padding: 15,\n },\n  textDark: {\n   color: '#E8EAED',\n },\n textWhite: {\n   color: '#121212'\n },\n})\n\n\n"]},"metadata":{},"sourceType":"module"}