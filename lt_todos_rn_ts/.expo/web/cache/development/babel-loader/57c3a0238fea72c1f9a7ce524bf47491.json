{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/tsvetomir/Documents/Test/lt_todos/lt_todos_rn_ts/components/TextComponent.tsx\";\n\nimport React, { useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ThemeContext } from \"../utils/ThemeManager\";\nexport var TextComponent = function TextComponent(_ref) {\n  var children = _ref.children,\n      textSize = _ref.textSize,\n      customStyle = _ref.customStyle;\n\n  var _useContext = useContext(ThemeContext),\n      themeColor = _useContext.themeColor;\n\n  var size = {};\n\n  switch (textSize) {\n    case 'regular':\n      size = styles.regular;\n      break;\n\n    case 'big':\n      size = styles.big;\n      break;\n\n    case 'xl':\n      size = styles.xl;\n      break;\n\n    case 'small':\n      size = styles.small;\n      break;\n\n    default:\n      size = styles.regular;\n      break;\n  }\n\n  return React.createElement(Text, {\n    style: [styles.text, size, styles[\"theme\" + themeColor], customStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, children);\n};\nvar styles = StyleSheet.create({\n  text: {\n    fontFamily: 'PlayFair'\n  },\n  regular: {\n    fontSize: 16\n  },\n  xl: {\n    fontSize: 24\n  },\n  big: {\n    fontSize: 20\n  },\n  small: {\n    fontSize: 12\n  },\n  themeDark: {\n    color: '#E8EAED'\n  },\n  themeLight: {\n    color: '#121212'\n  }\n});","map":{"version":3,"sources":["/home/tsvetomir/Documents/Test/lt_todos/lt_todos_rn_ts/components/TextComponent.tsx"],"names":["React","useContext","ThemeContext","TextComponent","children","textSize","customStyle","themeColor","size","styles","regular","big","xl","small","text","StyleSheet","create","fontFamily","fontSize","themeDark","color","themeLight"],"mappings":";;;AAAA,OAAOA,KAAP,IAA8CC,UAA9C,QAAgE,OAAhE;;;AAEA,SAASC,YAAT;AAQA,OAAO,IAAMC,aAA0C,GAAG,SAA7CA,aAA6C,OAIpD;AAAA,MAHLC,QAGK,QAHLA,QAGK;AAAA,MAFLC,QAEK,QAFLA,QAEK;AAAA,MADLC,WACK,QADLA,WACK;;AAEN,oBAAuBL,UAAU,CAACC,YAAD,CAAjC;AAAA,MAAQK,UAAR,eAAQA,UAAR;;AAEC,MAAIC,IAAI,GAAG,EAAX;;AAEA,UAAQH,QAAR;AACC,SAAK,SAAL;AACCG,MAAAA,IAAI,GAAGC,MAAM,CAACC,OAAd;AACC;;AACF,SAAK,KAAL;AACCF,MAAAA,IAAI,GAAGC,MAAM,CAACE,GAAd;AACC;;AACA,SAAK,IAAL;AACEH,MAAAA,IAAI,GAAGC,MAAM,CAACG,EAAd;AACC;;AACL,SAAK,OAAL;AACCJ,MAAAA,IAAI,GAAGC,MAAM,CAACI,KAAd;AACC;;AACF;AACCL,MAAAA,IAAI,GAAGC,MAAM,CAACC,OAAd;AACC;AAfH;;AAkBA,SAAO,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACD,MAAM,CAACK,IAAR,EAAcN,IAAd,EAAoBC,MAAM,WAASF,UAAT,CAA1B,EAAiDD,WAAjD,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6EF,QAA7E,CAAP;AACA,CA7BM;AA+BP,IAAMK,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAChCF,EAAAA,IAAI,EAAE;AACLG,IAAAA,UAAU,EAAE;AADP,GAD0B;AAIhCP,EAAAA,OAAO,EAAE;AACPQ,IAAAA,QAAQ,EAAE;AADH,GAJuB;AAOhCN,EAAAA,EAAE,EAAC;AACDM,IAAAA,QAAQ,EAAC;AADR,GAP6B;AAUhCP,EAAAA,GAAG,EAAG;AACJO,IAAAA,QAAQ,EAAE;AADN,GAV0B;AAahCL,EAAAA,KAAK,EAAE;AACLK,IAAAA,QAAQ,EAAE;AADL,GAbyB;AAgBhCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE;AADE,GAhBqB;AAmBhCC,EAAAA,UAAU,EAAC;AACTD,IAAAA,KAAK,EAAE;AADE;AAnBqB,CAAlB,CAAf","sourcesContent":["import React, { FunctionComponent, ReactNode, useContext } from \"react\";\nimport { Alert, StyleSheet,Text } from \"react-native\";\nimport { ThemeContext } from \"../utils/ThemeManager\";\n\ntype TextProps = {\n children: ReactNode,\n textSize?: 'regular' | 'big' | 'small' | 'xl',\n customStyle?: Object,\n}\n\nexport const TextComponent:FunctionComponent<TextProps> = ({\n children,\n textSize,\n customStyle,\n}) => {\n \nconst { themeColor } = useContext(ThemeContext);\n\n let size = {}; \n\n switch (textSize) {\n  case 'regular':\n   size = styles.regular\n    break\n  case 'big':\n   size = styles.big\n    break\n    case 'xl':\n      size = styles.xl\n       break\n  case 'small':\n   size = styles.small\n    break\n  default:\n   size = styles.regular\n    break\n}\n\n return <Text style={[styles.text, size, styles[`theme${themeColor}`],customStyle]}>{children}</Text>\n}\n\nconst styles = StyleSheet.create({\n text: {\n  fontFamily: 'PlayFair',\n },\n regular: {\n   fontSize: 16,\n },\n xl:{\n   fontSize:24,\n },\n big : {\n   fontSize: 20,\n },\n small: {\n   fontSize: 12,\n },\n themeDark: {\n   color: '#E8EAED',\n },\n themeLight:{\n   color: '#121212',\n }\n});"]},"metadata":{},"sourceType":"module"}