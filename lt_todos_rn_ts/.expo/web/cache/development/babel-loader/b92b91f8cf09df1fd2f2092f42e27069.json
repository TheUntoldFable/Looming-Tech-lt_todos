{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/tsvetomir/Documents/Test/lt_todos/lt_todos_rn_ts/screens/Urgent.tsx\";\n\nimport React, { memo, useContext } from 'react';\nimport Layout from \"../components/Layout\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Todo from \"../components/Todo\";\nimport { ThemeContext } from \"../utils/ThemeManager\";\nimport { TextComponent } from \"../components/TextComponent\";\nimport { LanguageContext } from \"../utils/LanguageManager\";\n\nvar Urgent = function Urgent(props) {\n  var _useContext = useContext(ThemeContext),\n      themeColor = _useContext.themeColor;\n\n  var _useContext2 = useContext(LanguageContext),\n      dictionary = _useContext2.dictionary;\n\n  var urgentTodos = dictionary.todos.filter(function (todo, index) {\n    return todo.is_urgent;\n  });\n  return React.createElement(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 1\n    }\n  }, React.createElement(TextComponent, {\n    textSize: \"xl\",\n    customStyle: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }\n  }, dictionary.urgentTask), React.createElement(View, {\n    style: styles.todoWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 6\n    }\n  }, urgentTodos.map(function (_ref) {\n    var is_urgent = _ref.is_urgent,\n        created_at = _ref.created_at,\n        title = _ref.title,\n        description = _ref.description;\n    return React.createElement(Todo, {\n      key: \"key-\" + title,\n      date: created_at,\n      title: title,\n      status: is_urgent,\n      description: description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 4\n      }\n    });\n  }))));\n};\n\nexport default memo(Urgent);\nvar styles = StyleSheet.create({\n  title: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlign: 'center',\n    padding: 15\n  },\n  textDark: {\n    color: '#E8EAED'\n  },\n  textWhite: {\n    color: '#121212'\n  },\n  todoWrapper: {\n    paddingHorizontal: 15\n  }\n});","map":{"version":3,"sources":["/home/tsvetomir/Documents/Test/lt_todos/lt_todos_rn_ts/screens/Urgent.tsx"],"names":["React","memo","useContext","Layout","Todo","ThemeContext","TextComponent","LanguageContext","Urgent","props","themeColor","dictionary","urgentTodos","todos","filter","todo","index","is_urgent","styles","title","urgentTask","todoWrapper","map","created_at","description","StyleSheet","create","justifyContent","alignItems","textAlign","padding","textDark","color","textWhite","paddingHorizontal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAkCC,IAAlC,EAAuCC,UAAvC,QAAyD,OAAzD;AACA,OAAOC,MAAP;;;;AAQA,OAAOC,IAAP;AACA,SAASC,YAAT;AACA,SAASC,aAAT;AACA,SAASC,eAAT;;AAEA,IAAMC,MAAyB,GAAG,SAA5BA,MAA4B,CAACC,KAAD,EAAW;AAC5C,oBAAuBP,UAAU,CAACG,YAAD,CAAjC;AAAA,MAAQK,UAAR,eAAQA,UAAR;;AACA,qBAAuBR,UAAU,CAACK,eAAD,CAAjC;AAAA,MAAQI,UAAR,gBAAQA,UAAR;;AAEA,MAAIC,WAAW,GAAGD,UAAU,CAACE,KAAX,CAAiBC,MAAjB,CAAwB,UAACC,IAAD,EAAMC,KAAN;AAAA,WAAgBD,IAAI,CAACE,SAArB;AAAA,GAAxB,CAAlB;AAEA,SACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF,oBAAC,UAAD;AAAY,IAAA,4BAA4B,EAAE,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAC,IAAxB;AAA6B,IAAA,WAAW,EAAEC,MAAM,CAACC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyDR,UAAU,CAACS,UAApE,CADH,EAEK,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACDT,WAAW,CAACU,GAAZ,CAAgB;AAAA,QAAEL,SAAF,QAAEA,SAAF;AAAA,QAAYM,UAAZ,QAAYA,UAAZ;AAAA,QAAuBJ,KAAvB,QAAuBA,KAAvB;AAAA,QAA6BK,WAA7B,QAA6BA,WAA7B;AAAA,WACjB,oBAAC,IAAD;AAAM,MAAA,GAAG,WAASL,KAAlB;AAA2B,MAAA,IAAI,EAAEI,UAAjC;AAA6C,MAAA,KAAK,EAAEJ,KAApD;AAA2D,MAAA,MAAM,EAAEF,SAAnE;AAA8E,MAAA,WAAW,EAAEO,WAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiB;AAAA,GAAhB,CADC,CAFL,CADE,CADD;AAYA,CAlBD;;AAoBA,eAAevB,IAAI,CAACO,MAAD,CAAnB;AAEA,IAAMU,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAChCP,EAAAA,KAAK,EAAE;AACLQ,IAAAA,cAAc,EAAE,QADX;AAELC,IAAAA,UAAU,EAAE,QAFP;AAGLC,IAAAA,SAAS,EAAE,QAHN;AAILC,IAAAA,OAAO,EAAE;AAJJ,GADyB;AAO/BC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,KAAK,EAAE;AADE,GAPqB;AAUhCC,EAAAA,SAAS,EAAE;AACTD,IAAAA,KAAK,EAAE;AADE,GAVqB;AAahCX,EAAAA,WAAW,EAAE;AACXa,IAAAA,iBAAiB,EAAC;AADP;AAbmB,CAAlB,CAAf","sourcesContent":["import React, { FunctionComponent,memo,useContext } from 'react'\nimport Layout from '../components/Layout'\nimport { \n View,\n Text,\n StyleSheet, \n ScrollView,\n Button\n} from 'react-native'\nimport Todo from '../components/Todo'\nimport { ThemeContext } from '../utils/ThemeManager'\nimport { TextComponent } from '../components/TextComponent'\nimport { LanguageContext } from '../utils/LanguageManager'\n\nconst Urgent: FunctionComponent = (props) => {\n const { themeColor } = useContext(ThemeContext);\n const { dictionary } = useContext(LanguageContext) \n\n let urgentTodos = dictionary.todos.filter((todo,index) => todo.is_urgent)\n\n return (\n  <Layout>\n<ScrollView showsVerticalScrollIndicator={false}>\n   <TextComponent textSize=\"xl\" customStyle={styles.title}>{dictionary.urgentTask}</TextComponent>\n     <View style={styles.todoWrapper}>\n   {urgentTodos.map(({is_urgent,created_at,title,description}) =>\n   <Todo key={`key-${title}`} date={created_at} title={title} status={is_urgent} description={description} />\n   )}\n     </View>\n   </ScrollView>\n  </Layout>\n )\n}\n\nexport default memo(Urgent);\n\nconst styles = StyleSheet.create({\n title: {\n   justifyContent: 'center',\n   alignItems: 'center',\n   textAlign: 'center',\n   padding: 15,\n },\n  textDark: {\n   color: '#E8EAED',\n },\n textWhite: {\n   color: '#121212'\n },\n todoWrapper: {\n   paddingHorizontal:15,\n }\n})\n\n\n"]},"metadata":{},"sourceType":"module"}