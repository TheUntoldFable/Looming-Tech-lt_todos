{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/tsvetomir/Documents/Test/lt_todos/lt_todos_rn_ts/navigation/AppNavigator.tsx\";\n\nimport React, { useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { ThemeContext, ThemeProvider } from \"../utils/ThemeManager\";\nimport { LanguageProvider, LanguageContext } from \"../utils/LanguageManager\";\nimport { All } from \"../screens/All\";\nimport { Urgent } from \"../screens/Urgent\";\nimport { TextComponent } from \"../components/TextComponent\";\nimport 'react-native-gesture-handler';\nvar Drawer = createDrawerNavigator();\nvar Stack = createNativeStackNavigator();\n\nvar AppNavigator = function AppNavigator() {\n  var _useContext = useContext(ThemeContext),\n      toggleTheme = _useContext.toggleTheme,\n      themeColor = _useContext.themeColor;\n\n  var _useContext2 = useContext(LanguageContext),\n      userLanguage = _useContext2.userLanguage,\n      userLanguageChange = _useContext2.userLanguageChange,\n      dictionary = _useContext2.dictionary;\n\n  var ToggleButtons = function ToggleButtons() {\n    var _useContext3 = useContext(ThemeContext),\n        toggleTheme = _useContext3.toggleTheme,\n        themeColor = _useContext3.themeColor;\n\n    var _useContext4 = useContext(LanguageContext),\n        userLanguage = _useContext4.userLanguage,\n        userLanguageChange = _useContext4.userLanguageChange,\n        dictionary = _useContext4.dictionary;\n\n    var handleLanguageChange = function handleLanguageChange() {\n      if (userLanguage === 'en') {\n        userLanguageChange('bg');\n      } else {\n        userLanguageChange('en');\n      }\n    };\n\n    return React.createElement(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles[\"button\" + themeColor],\n      onPress: function onPress() {\n        return toggleTheme();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    }, React.createElement(TextComponent, {\n      customStyle: styles.buttonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, themeColor)), React.createElement(TouchableOpacity, {\n      style: styles[\"button\" + themeColor],\n      onPress: function onPress() {\n        return handleLanguageChange();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, React.createElement(TextComponent, {\n      customStyle: styles.buttonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, userLanguage.toUpperCase())));\n  };\n\n  return React.createElement(LanguageProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }\n  }, React.createElement(ThemeProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(Drawer.Navigator, {\n    initialRouteName: dictionary.headerAll,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    options: {\n      drawerActiveBackgroundColor: '#121212',\n      drawerActiveTintColor: '#E8EAED',\n      drawerInactiveTintColor: '#121212',\n      drawerInactiveBackgroundColor: '#E8EAED',\n      drawerLabelStyle: {\n        fontFamily: 'PlayFair'\n      },\n      headerTitleStyle: {\n        fontFamily: 'PlayFair'\n      },\n      headerStyle: {\n        borderBottomEndRadius: 20,\n        borderBottomStartRadius: 20\n      },\n      headerRight: function headerRight() {\n        return React.createElement(ToggleButtons, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 36\n          }\n        });\n      }\n    },\n    name: dictionary.headerAll,\n    component: All,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      drawerActiveBackgroundColor: '#121212',\n      drawerActiveTintColor: '#E8EAED',\n      drawerInactiveTintColor: '#121212',\n      drawerInactiveBackgroundColor: '#E8EAED',\n      drawerLabelStyle: {\n        fontFamily: 'PlayFair'\n      },\n      headerTitleStyle: {\n        fontFamily: 'PlayFair'\n      },\n      headerStyle: {\n        borderBottomEndRadius: 20,\n        borderBottomStartRadius: 20\n      },\n      headerRight: function headerRight() {\n        return React.createElement(ToggleButtons, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 36\n          }\n        });\n      }\n    },\n    name: dictionary.headerUrgent,\n    component: Urgent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  })))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    lineHeight: 19\n  },\n  drawerDark: {\n    backgroundColor: '#121212'\n  },\n  drawerLight: {\n    backgroundColor: 'red'\n  },\n  buttonDark: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 50,\n    height: 30,\n    borderRadius: 40,\n    backgroundColor: '#121212',\n    marginRight: 10,\n    textAlign: 'center'\n  },\n  buttonLight: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 50,\n    height: 30,\n    borderRadius: 40,\n    backgroundColor: '#fff',\n    marginRight: 10\n  },\n  text: {\n    fontFamily: 'Lato'\n  }\n});\nexport default AppNavigator;","map":{"version":3,"sources":["/home/tsvetomir/Documents/Test/lt_todos/lt_todos_rn_ts/navigation/AppNavigator.tsx"],"names":["React","useContext","createNativeStackNavigator","createDrawerNavigator","NavigationContainer","ThemeContext","ThemeProvider","LanguageProvider","LanguageContext","All","Urgent","TextComponent","Drawer","Stack","AppNavigator","toggleTheme","themeColor","userLanguage","userLanguageChange","dictionary","ToggleButtons","handleLanguageChange","flexDirection","styles","buttonText","toUpperCase","headerAll","drawerActiveBackgroundColor","drawerActiveTintColor","drawerInactiveTintColor","drawerInactiveBackgroundColor","drawerLabelStyle","fontFamily","headerTitleStyle","headerStyle","borderBottomEndRadius","borderBottomStartRadius","headerRight","headerUrgent","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","lineHeight","drawerDark","drawerLight","buttonDark","width","height","borderRadius","marginRight","textAlign","buttonLight","text"],"mappings":"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","sourcesContent":["import React,{\n  FunctionComponent,\n  ReactElement,\n  useContext,\n} from 'react'\nimport {\n  StyleSheet,\n   TouchableOpacity,\n   View,\n} from 'react-native';\n\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\n\nimport { ThemeContext, ThemeProvider } from '../utils/ThemeManager';\nimport { LanguageProvider, LanguageContext } from '../utils/LanguageManager';\n\nimport { All } from '../screens/All';\nimport { Urgent } from '../screens/Urgent';\n\nimport { TextComponent } from '../components/TextComponent';\n\nimport 'react-native-gesture-handler';\n\nconst Drawer = createDrawerNavigator();\nconst Stack = createNativeStackNavigator();\n\nconst AppNavigator: FunctionComponent = () => {\n\n  const {toggleTheme, themeColor} = useContext(ThemeContext);\n  const { userLanguage, userLanguageChange,dictionary } = useContext(LanguageContext) \n\n\n const ToggleButtons = (): ReactElement => {\n  const {toggleTheme, themeColor} = useContext(ThemeContext);\n  const { userLanguage, userLanguageChange,dictionary } = useContext(LanguageContext) \n\n  const handleLanguageChange = (): void => {\n    if(userLanguage === 'en') {\n     userLanguageChange('bg')\n    } else {\n     userLanguageChange('en')\n    }\n  }\n  return (\n    <View style={{flexDirection:'row'}}>\n    <TouchableOpacity \n     style={styles[`button${themeColor}`]} \n     onPress={()=>toggleTheme()}>\n      <TextComponent customStyle={styles.buttonText}>\n        {themeColor}\n      </TextComponent>\n    </TouchableOpacity>\n      <TouchableOpacity \n      style={styles[`button${themeColor}`]} \n       onPress={()=> handleLanguageChange()}>\n      <TextComponent customStyle={styles.buttonText}>\n          {userLanguage.toUpperCase()}\n        </TextComponent>\n      </TouchableOpacity>\n      </View>\n  )\n }\n \n return (\n   <LanguageProvider>\n    <ThemeProvider>\n      <NavigationContainer>\n        <Drawer.Navigator initialRouteName={dictionary.headerAll} >\n          <Stack.Screen \n            options={{\n              drawerActiveBackgroundColor:'#121212',\n              drawerActiveTintColor:'#E8EAED',\n              drawerInactiveTintColor: '#121212',\n              drawerInactiveBackgroundColor: '#E8EAED',\n              drawerLabelStyle:{\n                fontFamily: 'PlayFair',\n              },\n              headerTitleStyle:{\n                fontFamily: 'PlayFair',\n              },\n              headerStyle:{\n                borderBottomEndRadius: 20,\n                borderBottomStartRadius: 20,\n              },\n               headerRight: () => (<ToggleButtons/>)\n               }} \n            name={dictionary.headerAll}\n            component={All}/>\n            <Stack.Screen \n            options={{\n              drawerActiveBackgroundColor:'#121212',\n              drawerActiveTintColor:'#E8EAED',\n              drawerInactiveTintColor: '#121212',\n              drawerInactiveBackgroundColor: '#E8EAED',\n      \n       \n              drawerLabelStyle:{\n                fontFamily: 'PlayFair',\n              },\n              headerTitleStyle:{\n                fontFamily: 'PlayFair',\n              },\n              headerStyle:{\n                borderBottomEndRadius: 20,\n                borderBottomStartRadius: 20,\n              },\n               headerRight: () => (<ToggleButtons/>)\n            }} \n            name={dictionary.headerUrgent}\n            component={Urgent}/>\n        </Drawer.Navigator>\n      </NavigationContainer>\n    </ThemeProvider>\n  </LanguageProvider>\n )\n}\n\nconst styles = StyleSheet.create({\n container: {\n   flex: 1,\n   backgroundColor: '#fff',\n   alignItems: 'center',\n   justifyContent: 'center',\n },\n buttonText: {\n   lineHeight: 19,\n },\n drawerDark: {\n   backgroundColor: '#121212',\n },\n drawerLight: {\n  backgroundColor:'red'\n },\n buttonDark: {\n   alignItems: 'center',\n   justifyContent:'center',\n   width: 50,\n   height: 30,\n   borderRadius:40,\n   backgroundColor: '#121212',\n   marginRight: 10,\n   textAlign:'center',\n },\n buttonLight: {\n  alignItems: 'center',\n  justifyContent:'center',\n  width: 50,\n  height: 30,\n  borderRadius:40,\n  backgroundColor: '#fff',\n  marginRight: 10,\n},\n text: {\n   fontFamily: 'Lato',\n }\n});\n\nexport default AppNavigator;\n"]},"metadata":{},"sourceType":"module"}