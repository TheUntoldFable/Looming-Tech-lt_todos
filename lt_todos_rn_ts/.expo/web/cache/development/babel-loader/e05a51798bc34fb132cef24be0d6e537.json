{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/tsvetomir/Documents/Test/lt_todos/lt_todos_rn_ts/App.tsx\";\nimport React, { useState, memo } from 'react';\nimport * as Font from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nimport AppNavigator from \"./navigation/AppNavigator\";\n\nvar loadFont = function loadFont() {\n  return Font.loadAsync({\n    \"Lato\": require(\"./assets/fonts/Lato.ttf\"),\n    \"PlayFair\": require(\"./assets/fonts/PlayFair.ttf\")\n  });\n};\n\nfunction App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontIsLoaded = _useState2[0],\n      setFontIsLoaded = _useState2[1];\n\n  if (!fontIsLoaded) {\n    return React.createElement(AppLoading, {\n      startAsync: loadFont,\n      onFinish: function onFinish() {\n        return setFontIsLoaded(true);\n      },\n      onError: function onError() {\n        return console.log('error');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    });\n  }\n\n  return React.createElement(AppNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  });\n}\n\nexport default memo(App);","map":{"version":3,"sources":["/home/tsvetomir/Documents/Test/lt_todos/lt_todos_rn_ts/App.tsx"],"names":["React","useState","memo","Font","AppLoading","AppNavigator","loadFont","loadAsync","require","App","fontIsLoaded","setFontIsLoaded","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,IAAzB,QAAqC,OAArC;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,SAAOH,IAAI,CAACI,SAAL,CAAe;AACpB,YAAQC,OAAO,2BADK;AAEpB,gBAAYA,OAAO;AAFC,GAAf,CAAP;AAID,CALD;;AAQC,SAASC,GAAT,GAAe;AACf,kBAAwCR,QAAQ,CAAU,KAAV,CAAhD;AAAA;AAAA,MAAOS,YAAP;AAAA,MAAqBC,eAArB;;AAEA,MAAG,CAACD,YAAJ,EAAkB;AAChB,WAAO,oBAAC,UAAD;AACP,MAAA,UAAU,EAAEJ,QADL;AAEP,MAAA,QAAQ,EAAE;AAAA,eAAKK,eAAe,CAAC,IAAD,CAApB;AAAA,OAFH;AAGP,MAAA,OAAO,EAAE;AAAA,eAAKC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAL;AAAA,OAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAKD;;AAEA,SACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGD;;AAED,eAAeX,IAAI,CAACO,GAAD,CAAnB","sourcesContent":["import React, { useState,memo } from 'react';\nimport * as Font from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nimport AppNavigator from './navigation/AppNavigator';\n\nconst loadFont = () => {\n  return Font.loadAsync({\n    \"Lato\": require('./assets/fonts/Lato.ttf'),\n    \"PlayFair\": require('./assets/fonts/PlayFair.ttf')\n  })\n}\n\n\n function App() {\n const [fontIsLoaded, setFontIsLoaded] = useState<Boolean>(false);\n\n if(!fontIsLoaded) {\n   return <AppLoading \n   startAsync={loadFont} \n   onFinish={()=> setFontIsLoaded(true)}\n   onError={()=> console.log('error')}\n   />\n }\n\n  return (\n      <AppNavigator/>\n  );\n}\n\nexport default memo(App);\n\n"]},"metadata":{},"sourceType":"module"}